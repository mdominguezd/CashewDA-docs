"use strict";(self.webpackChunkcashew_da_docs=self.webpackChunkcashew_da_docs||[]).push([[888],{784:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=s(5893),a=s(1151);const i={},r=void 0,l={id:"Dataset/ReadyToTrain_DS",title:"ReadyToTrain_DS",description:"Brief description of the submodule",source:"@site/docs/Dataset/ReadyToTrain_DS.md",sourceDirName:"Dataset",slug:"/Dataset/ReadyToTrain_DS",permalink:"/CashewDA-docs/docs/Dataset/ReadyToTrain_DS",draft:!1,unlisted:!1,editUrl:"https://github.com/${organizationName}/${projectName}/tree/main/docs/Dataset/ReadyToTrain_DS.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dataset",permalink:"/CashewDA-docs/docs/category/dataset"},next:{title:"Transforms",permalink:"/CashewDA-docs/docs/Dataset/Transforms"}},o={},d=[{value:"Brief description of the submodule",id:"brief-description-of-the-submodule",level:2},{value:"calculate_percentiles()",id:"calculate_percentiles",level:2},{value:"Params",id:"params",level:3},{value:"Outputs",id:"outputs",level:3},{value:"Dependencies used",id:"dependencies-used",level:3},{value:"Source code",id:"source-code",level:3},{value:"get_LOVE_DataLoaders()",id:"get_love_dataloaders",level:2},{value:"Params",id:"params-1",level:3},{value:"Outputs",id:"outputs-1",level:3},{value:"Dependencies used",id:"dependencies-used-1",level:3},{value:"Source code",id:"source-code-1",level:3}];function c(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"brief-description-of-the-submodule",children:"Brief description of the submodule"}),"\n",(0,t.jsx)(n.p,{children:"Here all of the code used to pass from the datasets downloaded to ready to use data for training is described."}),"\n",(0,t.jsx)(n.h2,{id:"calculate_percentiles",children:"calculate_percentiles()"}),"\n",(0,t.jsx)(n.p,{children:"Function to calculate 0.01 and 0.99 percentiles of the bands of planet images. These values will be later used for normalizing the dataset."}),"\n",(0,t.jsx)(n.h3,{id:"params",children:"Params"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"img_folder:"})," ",(0,t.jsx)(n.em,{children:"(list)"})," The name of the folder with the images."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"samples:"})," ",(0,t.jsx)(n.em,{children:"(integer)"})," The number of images to take to calculate these percentiles, for computing reasons not all images are considered."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"outputs",children:"Outputs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"vals:"})," ",(0,t.jsx)(n.em,{children:"(numpy.ndarray)"})," The mean 1% and 99% quantiles for the images analysed."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dependencies-used",children:"Dependencies used"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"os"}),"\n",(0,t.jsx)(n.li,{children:"random"}),"\n",(0,t.jsx)(n.li,{children:"numpy"}),"\n",(0,t.jsx)(n.li,{children:"rioxarray"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"source-code",children:"Source code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    imgs = [fn for fn in os.listdir(img_folder) if 'StudyArea' in fn]\n\n    random.seed(8)\n    img_sample = random.sample(imgs, samples)\n    quantiles = np.zeros((2,4))\n    \n    for i in img_sample:\n        quantiles += rioxarray.open_rasterio(img_folder + \"\\\\\" + i).quantile((0.01, 0.99), dim = ('x','y')).values\n    \n    vals = quantiles/len(img_sample)\n    \n    return vals\n"})}),"\n",(0,t.jsx)(n.h2,{id:"get_love_dataloaders",children:"get_LOVE_DataLoaders()"}),"\n",(0,t.jsx)(n.p,{children:"Function to get the loaders for LoveDA dataset."}),"\n",(0,t.jsx)(n.h3,{id:"params-1",children:"Params"}),"\n",(0,t.jsx)(n.h3,{id:"outputs-1",children:"Outputs"}),"\n",(0,t.jsx)(n.h3,{id:"dependencies-used-1",children:"Dependencies used"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"torchgeo.datasets -> LoveDA"}),"\n",(0,t.jsx)(n.li,{children:"torch"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"source-code-1",children:"Source code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    if transforms != None:\n        train_DS = LoveDA('LoveDA', split = 'train', scene = domain, download = True, transforms = transforms)\n    else:\n        train_DS = LoveDA('LoveDA', split = 'train', scene = domain, download = True)\n        \n    test_DS = LoveDA('LoveDA', split = 'test', scene = domain, download = True)\n    val_DS = LoveDA('LoveDA', split = 'val', scene = domain, download = True)\n\n    if train_split_size != None:\n        if val_split_size == None:\n            val_split_size = train_split_size\n        train_DS, l = random_split(train_DS, [train_split_size, 1-train_split_size], generator=torch.Generator().manual_seed(8))\n        val_DS, l = random_split(val_DS, [val_split_size, 1-val_split_size], generator=torch.Generator().manual_seed(8))\n        test_DS, l = random_split(test_DS, [val_split_size, 1-val_split_size], generator=torch.Generator().manual_seed(8))\n    \n    train_loader = torch.utils.data.DataLoader(dataset=train_DS, batch_size=batch_size, shuffle=True)\n    val_loader = torch.utils.data.DataLoader(dataset=val_DS, batch_size=batch_size, shuffle=False)\n    test_loader = torch.utils.data.DataLoader(dataset=test_DS, batch_size=batch_size, shuffle=False)\n\n    if only_get_DS:\n        return train_DS, val_DS, test_DS\n    else:\n        return train_loader, val_loader, test_loader\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>r});var t=s(7294);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);