"use strict";(self.webpackChunkcashew_da_docs=self.webpackChunkcashew_da_docs||[]).push([[66],{1801:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=s(5893),r=s(1151);const o={},a="Transforms",i={id:"Dataset/Transforms",title:"Transforms",description:"Brief description of the submodule",source:"@site/docs/Dataset/Transforms.md",sourceDirName:"Dataset",slug:"/Dataset/Transforms",permalink:"/CashewDA-docs/docs/Dataset/Transforms",draft:!1,unlisted:!1,editUrl:"https://github.com/${organizationName}/${projectName}/tree/main/docs/Dataset/Transforms.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ReadyToTrain_DS",permalink:"/CashewDA-docs/docs/Dataset/ReadyToTrain_DS"},next:{title:"Unzip_DS",permalink:"/CashewDA-docs/docs/Dataset/Unzip_DS"}},d={},c=[{value:"Brief description of the submodule",id:"brief-description-of-the-submodule",level:2},{value:"brightness()",id:"brightness",level:2},{value:"Params",id:"params",level:3},{value:"Outputs",id:"outputs",level:3},{value:"Source code",id:"source-code",level:3},{value:"get_transforms()",id:"get_transforms",level:2},{value:"Params",id:"params-1",level:3},{value:"Outputs",id:"outputs-1",level:3},{value:"Dependencies used",id:"dependencies-used",level:3},{value:"Source code",id:"source-code-1",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"transforms",children:"Transforms"}),"\n",(0,t.jsx)(n.h2,{id:"brief-description-of-the-submodule",children:"Brief description of the submodule"}),"\n",(0,t.jsx)(n.p,{children:"In this submodule you can find the functions used for augmneting the datasets during training."}),"\n",(0,t.jsx)(n.h2,{id:"brightness",children:"brightness()"}),"\n",(0,t.jsx)(n.p,{children:"Function to augment images. It increases or decreases the brightness of the image by a value of 0 to 10%."}),"\n",(0,t.jsx)(n.h3,{id:"params",children:"Params"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"i:"})," (torch.tensor) Tensor to be augmented."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"increase:"})," (float) Percentage of increase or decrease of brightness in the images. Default is 0.1."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"prob:"})," (float) Probability of changing the brightness of the image."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"outputs",children:"Outputs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"transformed:"})," (torch.tensot) Tensor with the transform applied."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"source-code",children:"Source code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def brightness(i, increase = 0.1, prob = 0.5):\n    """\n        Function to augment images it increases or decreases the brightness of the image by a value of 0 to 20%\n    """\n    if i.unique().shape[0] != 2: # Hard code to avoid the transform to be done to the GT\n        p = np.random.random(1)\n        if p < prob:\n            p_inc = np.random.random(1)\n            i = i*(1 + increase*p_inc)\n            i[i>1] = 1.0\n        else:\n            p_dec = np.random.random(1)\n            i = i*((1 - increase*p_dec))\n\n    return i.float()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get_transforms",children:"get_transforms()"}),"\n",(0,t.jsx)(n.p,{children:"Function that returns the transforms to be made on the fly to the cashew dataset."}),"\n",(0,t.jsx)(n.h3,{id:"params-1",children:"Params"}),"\n",(0,t.jsx)(n.h3,{id:"outputs-1",children:"Outputs"}),"\n",(0,t.jsx)(n.h3,{id:"dependencies-used",children:"Dependencies used"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import torchvision.transforms.v2 as T\n"})}),"\n",(0,t.jsx)(n.h3,{id:"source-code-1",children:"Source code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def get_transforms():\n    """\n        Function that will return the transform to be made on the fly to data.\n    """\n    transform = T.Compose([\n        T.RandomHorizontalFlip(p=0.5),\n        T.RandomVerticalFlip(p=0.5),\n        T.Lambda(brightness)\n    ])\n    return transform\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>a});var t=s(7294);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);